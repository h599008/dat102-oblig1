
public class ArrayBag<T> implements BagInterface<T>{
	private final T[] bag;
	private int numberOfEntries;
	private static final int DEFAULT_CAPACITY = 25;
	
	
	public ArrayBag() {
		this(DEFAULT_CAPACITY);
	}
	
	public ArrayBag(int capacity) {
		this.numberOfEntries = 0;
		// The cast is safe because the new array contains null entries.
		@SuppressWarnings("unchecked")
		T[] tempBag = (T[])new Object[capacity];
		bag = tempBag;
	}
	
	private boolean isArrayFull() {
		return this.numberOfEntries >= this.bag.length;
	}
	
	public boolean Add(T newEntry) {
		boolean result = true;
		
		if (isArrayFull()) {
			return false;
		} else {
			this.bag[this.numberOfEntries] = newEntry;
			this.numberOfEntries++;
		}
		
		return result;
	}
}
